<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
  <!-- 自动加载构建bean -->  
   <context:component-scan base-package="com.levi.dao" />
   <context:component-scan base-package="com.levi.service" />  
    
    <!-- 加载配置属性文件 -->
	<context:property-placeholder
		ignore-unresolvable="true" location="classpath:resource/config.properties" />
    <!-- 配置数据源 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:com/levi/mappers/*.xml"></property>
		<!-- mybatis配置文件 -->
		<property name="configLocation" value="classpath:resource/spring-mybatis.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.levi.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- - - - - - - spring 声明式事务 - - - - - - - -->
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- 支持注解方式配置事物 --><!-- 配置基于注解的声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<aop:config>
		<aop:pointcut id="targetMethod" expression="execution(* com.levi.service.*.*(..))" />
		<aop:advisor pointcut-ref="targetMethod"  advice-ref="transactionAdvice"/>
	</aop:config>
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="add*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="create*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="edit*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="drop*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="modify*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
				<tx:method name="*" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice>
</beans>